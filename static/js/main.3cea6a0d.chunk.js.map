{"version":3,"sources":["pictures/instructions.png","Tab.js","output.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Tab","value","onClick","TimeMachine","wantedhour","wantedminutes","TimeZone","c","parseInt","console","log","there","Date","here","date","ianatz","invdate","toLocaleString","timeZone","diff","getTime","changeTimezone","setMinutes","getMinutes","a","toString","slice","replace","length","App","handleChange","newValue","setState","currentValue","string","state","handleSecondChange","currentSecondValue","handleClick","Value","handlehhourchange","wanhou","target","handlehminuteschange","wanmin","absolute","show","bind","handleToggle","this","visible","document","title","str","hours","minutes","getSeconds","options","useCustomTime","width","border","borderColor","baseColor","centerColor","handColors","second","minute","hour","id","style","defaultValue","placeholder","onChange","class","type","min","max","openModal","height","effect","onClickAway","closeModal","href","data-tip","place","Component","Boolean","window","location","hostname","match","ReactDOM","render","rel","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3cea6a0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/instructions.540bcf1f.png\";","import React from 'react';\r\nimport './Tab.css';\r\n\r\nconst Tab = ({value,onClick}) =>{\r\n\r\n\treturn(\r\n\r\n\t\t\t<button  onClick={onClick} > {value}</button>\r\n\r\n\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default Tab;","import React from 'react';\r\nimport './output.css';\r\n\r\n\r\n\r\n\r\nfunction changeTimezone(date, ianatz) {\r\n\r\n\r\n  var invdate = new Date(date.toLocaleString('en-US', {\r\n    timeZone: ianatz\r\n  }));\r\n\r\n\r\n  var diff = date.getTime() - invdate.getTime();\r\n\r\n  return new Date(date.getTime() + diff);\r\n\r\n}\r\n\r\nconst TimeMachine =({wantedhour , wantedminutes,TimeZone}) =>{\r\nlet string;\r\n\tlet c = parseInt(wantedhour);\r\n\tlet b = parseInt(wantedminutes);\r\n\tconsole.log(c);\r\n\tvar there = new Date(null,null,null,wantedhour,wantedminutes,0);\r\n\tvar here = changeTimezone(there, TimeZone);\r\n\there.setMinutes(here.getMinutes()-20);\r\n\r\n\r\n\tlet a = `Your time: ${here.toString().slice(15,24)} \\n ${TimeZone.replace('/','-').replace('_','-')}: ${there.toString().slice(15,24)} `;\r\n\t// let a = `Here: ${here.toString().slice(15,24)} \\n Toronto: ${there.toString().slice(15,24)}`;\r\n\tif(wantedhour!=''&& wantedminutes!='' && TimeZone.length>0 && TimeZone!='Asia/Jerusalem')\r\n\treturn <h1>{a}</h1>;\r\n\telse\r\n\t\treturn <h1></h1>;\r\n\r\n\r\n}\r\nexport default TimeMachine;","import React, { Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport TimezonePicker from 'react-bootstrap-timezone-picker';\nimport 'react-bootstrap-timezone-picker/dist/react-bootstrap-timezone-picker.min.css';\nimport './App.css';\nimport Tab from './Tab';\nimport AnalogClock from 'analog-clock-react';\nimport TimeMachine from './output';\nimport instructions from './pictures/instructions.png';\nimport Modal from 'react-awesome-modal';\nimport ReactTooltip from 'react-tooltip';\nimport \"typeface-roboto\";\n\n\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = { \n      currentValue: 'Asia/Jerusalem', \n      currentSecondValue: 'Asia/Jerusalem', \n      absolute: false, \n      string:new Date().toLocaleString(\"en-US\", {timeZone: 'Asia/Jerusalem'}),\n      wanhou:'',\n      wanmin:'',\n      show:false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n  }  \n\n  \n\n  handleChange=(newValue) =>{\n    if(newValue!='')\n    this.setState({ currentValue: newValue ,string:new Date().toLocaleString(\"en-US\", {timeZone: newValue}) });\n    console.log(this.state.currentValue);\n  }\n\n  handleSecondChange=(newValue) =>{\n    if(newValue!='')\n    this.setState({ currentSecondValue: newValue ,string:new Date().toLocaleString(\"en-US\", {timeZone: newValue}) });\n    console.log(this.state.currentValue);\n  }\n\n\n  handleClick=(Value)=>{\n   this.handleChange(Value);\n  }\n\n  handleToggle() {\n    this.setState({ absolute: !this.state.absolute ,});\n  }\n  \n\nhandlehhourchange=(a)=>{\n this.setState({wanhou:a.target.value});\n}\nhandlehminuteschange=(a)=>{\n this.setState({wanmin:a.target.value});\n}\n  \n\n  openModal() {\n        this.setState({\n            visible : true\n        });\n    }\n\n    closeModal() {\n        this.setState({\n            visible : false\n        });\n    }\n\n  render(){ \n    document.title=\"Time Zones\";\n    const timezonestyle={\n    'width': '21em',\n    'border-radius':'5px',\n    'padding':'3px',\n    'background-color':'white',\n    'border':'1px solid black',\n    'font-size':'0.8em',\n    'color':'wheat',\n    'cursor':'pointer',\n    'position':'absolute',\n    'z-index':'9999'\n    };\n    const timezonesecondstyle={\n     'width': '21em',\n    'border-radius':'5px',\n    'padding':'3px',\n    'background-color':'white',\n    'border':'1px solid black',\n    'font-size':'0.8em',\n    'color':'wheat',\n    'cursor':'pointer',\n    'position':'absolute',\n    'z-index':'9998',\n    'grid-column-start':'1'\n  };\n   \n\n    let str= this.state.string;  \n    let hours =str.slice(-11,-9); \n    let minutes =str.slice(-8,-6); \n    let seconds = new Date().getSeconds(); \n    console.log(minutes);      \n    let options={\n      useCustomTime: true,    // set this to true\n      width: \"150px\",\n      border: true,\n      borderColor: \"black\",\n      baseColor: \"white\",\n      centerColor: \"steelblue\",\n      handColors: {\n      second: \"transparent\",\n      minute: \"red\",\n      hour: \"black\"\n      },\n\n      \"seconds\": null,   // set your\n      \"minutes\": minutes,  // own\n      \"hours\": hours     // time here.\n    }\n\n\n\n    return (\n      \n    <div id=\"container\">\n      <div id = \"nav\">\n      <ul id=\"navlist\">\n        <li  style={{'text-transform':'uppercase'}} id=\"online\">Online tool to find other time zones</li>\n        </ul>\n\n      </div>\n\n      <div id=\"divone\" >\n        <p id=\"choose\" >Choose time zone from list or populars:</p>\n        <TimezonePicker \n            absolute      = {false}\n            defaultValue  = 'Asia/Jerusalem'\n            placeholder   = \"Select timezone...\"\n            onChange      = {this.handleChange}\n            id= \"Timezone\" \n            style = {timezonestyle}        \n          />\n\n          \n      </div>\n\n      <div id=\"buttonsdiv\">\n        <Tab onClick={()=>this.handleClick('Australia/Darwin')} value=\"Australia Central\"/>\n        <Tab onClick={()=>this.handleClick('Australia/Brisbane')} value=\"Australia Eastern\"/>\n        <Tab onClick={()=>this.handleClick('Asia/Shanghai')} value=\"China\"/>\n        <Tab onClick={()=>this.handleClick('Europe/London')} value=\"London\"/>\n        <Tab onClick={()=>this.handleClick('Europe/Berlin')} value=\"Berlin\"/>\n        <Tab onClick={()=>this.handleClick('Europe/Madrid')} value=\"Madrid\"/>\n        <Tab onClick={()=>this.handleClick('Europe/Rome')} value=\"Rome\"/>\n        <Tab onClick={()=>this.handleClick('Pacific/Honolulu')} value=\"Hawaii\"/>  \n        <Tab onClick={()=>this.handleClick('America/Denver')} value=\"Denver\"/> \n        <Tab onClick={()=>this.handleClick('America/Los_Angeles')} value=\"Los Angeles\"/>\n        <Tab onClick={()=>this.handleClick('America/New_York')} value=\"New York\"/>\n        <Tab onClick={()=>this.handleClick('America/Chicago')} value=\"Chicago\"/>\n      </div>\n\n      <div  id=\"Analog\"> \n       <h1> Current time in {this.state.currentValue.replace('/','-')}:</h1>\n        <div style={{'margin-left':'12%'}}><AnalogClock {...options}/></div>\n        <div id=\"tzline\"><p>Time: {this.state.string}</p></div>\n      </div>\n\n          \n          <div id=\"havemeetdiv\"><p id=\"havemeetpar\">Your meeting with the Chinese guy begins at 10:00 and wanna know what this time is it in Israel?</p></div>\n\n          <div id=\"MeetArange\">\n          <h1>Enter the time abroad end get your local time:</h1>\n           \n\n            <div id=\"timezonestringdiv\">\n                <div id='inputdiv'>\n                      <input class=\"hourinput\"  type=\"number\" placeholder=\"HH\" min='0' max='24' onChange={this.handlehhourchange}></input>\n                      :\n                      <input class=\"hourinput\" type=\"number\" placeholder=\"MM\" min='0' max='60' onChange={this.handlehminuteschange}></input>         \n                </div>\n                <div id=\"timezonescindpicker\">\n                 <TimezonePicker \n                    absolute      = {false}\n                    defaultValue  = 'Asia/Jerusalem'\n                    placeholder   = \"Select timezone...\"\n                    onChange      = {this.handleSecondChange}\n                    id= \"Timezone\" \n                    style = {timezonesecondstyle}        \n                  />\n                </div>\n\n                <div id=\"TimeMachine\">\n                <TimeMachine\n                      wantedhour={this.state.wanhou}\n                      wantedminutes={this.state.wanmin}\n                      TimeZone={this.state.currentSecondValue}\n                  />\n                </div>\n            </div>\n          </div>\n\n          <section>\n                    <button type=\"button\"  onClick={() => this.openModal()}> 📑  Instructions</button>\n                    <Modal visible={this.state.visible} width=\"400\" height=\"300\" effect=\"fadeInUp\" onClickAway={() => this.closeModal()}>\n                        <div id=\"modaldiv\">\n                            <h1>Instructions</h1>\n                            <ol>\n                            <li>Choose time zone from the list</li>\n                            <li>Set abroad time HH/MM - 24-Hours format</li>\n                            <li>Now you can see your time, and the time abroad</li>\n                            </ol>\n                            <a href=\"javascript:void(0);\" id=\"close\" onClick={() => this.closeModal()}> \n                              <a data-tip=\"Cool, I got it.\">🤙</a>\n                              <ReactTooltip place=\"bottom\" value=\"a\" type=\"dark\" effect=\"float\"/>\n\n                             </a>\n                        </div>\n                    </Modal>\n          </section>\n\n\n    </div>\n    );\n  }\n};\n\n\n\nexport default App;\n\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl, config);\n\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              console.log('Content is cached for offline use.');\n\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(\n\t<div>\n\t\t<link rel=\"shortcut icon\" type=\"image/png\" href=\"./pictures/icon.png\"/>\n\t    <App/>\n\t </div>\n\t \n,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}